[push 15;
malloc;
bind n;
push n;
store;
push (h,
  [bind f;
  push h;
  load;
  malloc;
  bind n;
  push n;
  store;
  push 1;
  malloc;
  bind h1@;
  push h1@;
  store;
  push h;
  load;
  push 10;
  div;
  malloc;
  bind h2@;
  push h2@;
  store;
  push (h,
    [bind for_fn#;
    push h;
    load;
    push h2@;
    load;
    push 1;
    add;
    less;
    jtr (
      [push 0;
      malloc;
      bind h1@;
      push h1@;
      store;
      push 10;
      push h;
      load;
      div;
      malloc;
      bind h2@;
      push h2@;
      store;
      push (h,
        [bind for_fn#;
        push h;
        load;
        push h2@;
        load;
        push 1;
        add;
        less;
        jtr (
          [push n;
          load;
          push h;
          load;
          sub;
          push h;
          store;
          push h;
          load;
          pop;
          push for_fn#;
          push for_fn#;
          push h;
          load;
          push 1;
          add;
          malloc;
          call],
          [push unit])]
        );
      bind for_fn#;
      push for_fn#;
      push for_fn#;
      push h1@;
      load;
      malloc;
      call;
      unbind;
      pop;
      unbind;
      pop;
      unbind;
      pop;
      pop;
      push for_fn#;
      push for_fn#;
      push h;
      load;
      push 1;
      add;
      malloc;
      call],
      [push unit])]
    );
  bind for_fn#;
  push for_fn#;
  push for_fn#;
  push h1@;
  load;
  malloc;
  call;
  unbind;
  pop;
  unbind;
  pop;
  unbind;
  pop;
  pop;
  push n;
  load;
  push h;
  store;
  push h;
  load;
  malloc;
  bind puta#@;
  push puta#@;
  store;
  push puta#@;
  load;
  push puta#@;
  load;
  put;
  unbind;
  pop;
  pop;
  push h;
  load;
  push 2;
  mul;
  unbind;
  pop]
  );
bind f;
push (n,
  [bind h;
  push f;
  push f;
  push n;
  load;
  push n;
  call;
  malloc;
  bind puta#@;
  push puta#@;
  store;
  push puta#@;
  load;
  push puta#@;
  load;
  put;
  unbind;
  pop;
  pop;
  push n;
  load;
  push 1;
  eq;
  jtr (
    [push 0;
    malloc;
    bind puta#@;
    push puta#@;
    store;
    push puta#@;
    load;
    push puta#@;
    load;
    put;
    unbind;
    pop],
    [push n;
    load;
    push 2;
    div;
    push 2;
    mul;
    push n;
    load;
    eq;
    jtr (
      [push h;
      push h;
      push n;
      load;
      push 2;
      div;
      malloc;
      call],
      [push h;
      push h;
      push 3;
      push n;
      load;
      mul;
      push 1;
      add;
      malloc;
      call])])]
  );
bind h;
push h;
push h;
push n;
load;
malloc;
call;
unbind;
pop;
unbind;
pop;
unbind;
pop]
